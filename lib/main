#!/usr/bin/env bash

DIR="$(dirname "$(realpath "$0")")"

# shellcheck source=./lib/helpers
source "$DIR"/../helpers

# Ask for password at start
request-sudo

message "symlinking dotfiles to your home directory..."
ln -sf "$DIR"/../.aliases ~
ln -sf "$DIR"/../.bash_profile ~
ln -sf "$DIR"/../.bashrc ~
ln -sf "$DIR"/../.emacs ~
ln -sf "$DIR"/../.exports ~
ln -sf "$DIR"/../.functions ~
ln -sf "$DIR"/../.profile ~

message "configuring SSH..."
mkdir -p "$HOME"/.ssh
ssh_config='AddKeysToAgent yes'
ssh_config_path="$HOME"/.ssh/config
if ! [ -f "$ssh_config_path" ] || ! grep --quiet "$ssh_config" "$ssh_config_path"; then
	echo "$ssh_config" >>"$ssh_config_path"
fi

message "configure GPG..."
mkdir -p "$HOME"/.gnupg
gpg_agent_config='default-cache-ttl 34560000
max-cache-ttl 34560000'
gpg_agent_config_path="$HOME"/.gnupg/gpg-agent.conf
if ! [ -f "$gpg_agent_config_path" ] || ! grep --quiet "$gpg_agent_config" "$gpg_agent_config_path"; then
	echo "$gpg_agent_config" >>"$gpg_agent_config_path"
fi

config_dir="$(xdg_config)"
message "symlinking configurations to '$config_dir'..."
if [ -h "$HOME"/.ripgreprc ]; then
	message "  %s" "removing legacy .ripgreprc..."
	rm -f "$HOME"/.ripgreprc
fi
mkdir -p "$config_dir"/ripgrep
ln -sf "$DIR"/../.ripgreprc "$config_dir"/ripgrep/config

if ! [ -d "$config_dir"/docker ]; then
	message "creating Docker configuration directory..."
	mkdir -p "$config_dir"/docker
fi

message "running OS-specific scripts..."
if "$DIR"/bin/is-macos; then
	"$DIR"/macos
elif "$DIR"/bin/is-linux; then
	"$DIR"/linux
	if command -v apt >/dev/null; then
		"$DIR"/apt
	fi
fi

if "$DIR"/bin/is-wsl; then
	"$DIR"/wsl
fi

"$DIR"/brew
"$DIR"/git
"$DIR"/golang
"$DIR"/node
"$DIR"/pip
"$DIR"/tmux
"$DIR"/vscode
"$DIR"/zsh

message "done. start a new login shell or run 'source .zshrc'."
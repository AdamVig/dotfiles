#!/usr/bin/env bash

set -euo pipefail

_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# shellcheck source=./lib/helpers
source "$_dir"/helpers

_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# Ask for password at start
# shellcheck disable=SC2119
request-sudo

message "symlinking dotfiles to your home directory..."
ln -sf "$_dir"/../.bash_profile "$HOME"
ln -sf "$_dir"/../config/emacs "$HOME"/.emacs
ln -sf "$_dir"/../.exports "$HOME"

message "configuring SSH..."
mkdir -p "$HOME"/.ssh
ssh_config='AddKeysToAgent yes'
ssh_config_path="$HOME"/.ssh/config
if ! [ -f "$ssh_config_path" ] || ! grep --quiet "$ssh_config" "$ssh_config_path"; then
	echo "$ssh_config" >>"$ssh_config_path"
fi

message "configure GPG..."
mkdir -p "$HOME"/.gnupg
gpg_agent_config='default-cache-ttl 34560000
max-cache-ttl 34560000'
gpg_agent_config_path="$HOME"/.gnupg/gpg-agent.conf
if ! [ -f "$gpg_agent_config_path" ] || ! grep --quiet "$gpg_agent_config" "$gpg_agent_config_path"; then
	echo "$gpg_agent_config" >>"$gpg_agent_config_path"
fi

config_dir="$(xdg_config)"
message "symlinking configurations to '$config_dir'..."
if [ -h "$HOME"/.ripgreprc ]; then
	message "  %s" "removing legacy .ripgreprc..."
	rm -f "$HOME"/.ripgreprc
fi
mkdir -p "$config_dir"/ripgrep
ln -sf "$_dir"/../config/ripgrep "$config_dir"/ripgrep/config

if ! [ -d "$config_dir"/docker ]; then
	message "creating Docker configuration directory..."
	mkdir -p "$config_dir"/docker
fi

message "running OS-specific scripts..."

if "$_dir"/../bin/is-macos; then
	"$_dir"/macos
elif "$_dir"/../bin/is-linux; then
	"$_dir"/linux
	if command -v apt >/dev/null; then
		"$_dir"/apt
	fi
fi

if "$_dir"/../bin/is-wsl; then
	"$_dir"/wsl
fi

"$_dir"/brew
"$_dir"/git
"$_dir"/golang
"$_dir"/node
"$_dir"/pip
"$_dir"/tmux
"$_dir"/vscode
"$_dir"/zsh
"$_dir"/profile-picture

message "done. start a new login shell or run 'source .zshrc'."
#!/usr/bin/env bash

set -euo pipefail

_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# shellcheck source=./lib/helpers
source "$_dir"/helpers

log() {
	log_with_component backup "$@"
}

config_file_attachment_name='resticprofile-profiles.toml'
config_path=/etc/resticprofile
password_file_name=restic-vault-password.txt
password_field_name='Restic backup vault'

log_start 'setting up backup'

unlock_bitwarden_vault

if ! hostname="$(hostname -s)"; then
	fatal 'failed to get system hostname'
fi

log "using hostname \"$hostname\""

log_start 'getting devices folder'
if ! devices_folder_id="$(2>/dev/null bw get folder devices | jq --raw-output '.id')"; then
	fatal 'failed to get ID of Bitwarden folder "devices"'
fi
log_end

log_start 'getting device entry'
if ! item="$(2>/dev/null bw list --folderid "$devices_folder_id" items |
	jq --exit-status --arg hostname "$hostname" '.[] | select(.name != null and (.name | test("\($hostname)$")))')"; then
	warn_and_bail "failed to find Bitwarden item in folder \"devices\" for \"$hostname\", skipping backup setup"
fi
log_end

log_start 'finding config file in device entry attachments'
if ! attachment_id="$(echo "$item" |
	jq --exit-status --raw-output --arg fileName "$config_file_attachment_name" '.attachments[] | select(.fileName != null and (.fileName | test("\($fileName)$"))) | .id')"; then
	warn_and_bail "failed to find config file attachment with name \"$config_file_attachment_name\" in device entry, skipping backup setup
all attachments:
$(echo "$item" | jq '.attachments')"
fi
log_end

log_start 'downloading config file attachment'
request_sudo mkdir -p "$config_path"
item_id="$(echo "$item" | jq --raw-output '.id')"
config_file_tmp="$(mktemp)"
if ! bw get attachment "$attachment_id" --itemid="$item_id" --output="$config_file_tmp"; then
	warn_and_bail "failed to download attachment \"$attachment_id\" from device entry, skipping backup setup"
fi
request_sudo install "$config_file_tmp" "$config_path"/profiles.toml
log_end

log_start 'getting Restic password from fields'
if ! password="$(echo "$item" |
	jq --exit-status --raw-output --arg name "$password_field_name" \
		'.fields | map(select(.name == $name)) | .[0].value')"; then
	warn_and_bail "failed to get field \"$password_field_name\" from device entry; backups will not run
all fields:
$(echo "$item" | jq '.fields')"
fi
echo "$password" | request_sudo tee "$config_path"/"$password_file_name" >/dev/null
log_end

log_start 'starting resticprofile schedule'
if ! request_sudo resticprofile schedule --all; then
	warn_and_bail 'failed to start resticprofile schedule; backups will not run automatically'
fi
log_end

log_end

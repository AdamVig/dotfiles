#!/usr/bin/env bash

set -euo pipefail

_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# shellcheck source=./lib/helpers
source "$_dir"/helpers

_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

readonly profile_picture_dirs=("$HOME"/Pictures "$HOME"/pictures)
readonly profile_picture_filename='profile.jpg'
found_dir=false
for profile_picture_dir in "${profile_picture_dirs[@]}"; do
	profile_picture_path="${profile_picture_dir}/${profile_picture_filename}"
	if [ -d "$profile_picture_dir" ]; then
		found_dir=true
		if ! [ -f "$profile_picture_path" ]; then
			log "downloading profile picture to $profile_picture_dir..."
			email="$(git config user.email)"
			if [ -n "$email" ]; then

				if command -v md5sum >/dev/null; then
					md5_command='md5sum'
				elif command -v md5 >/dev/null; then
					md5_command='md5'
				else
					fatal 'could not find md5 or md5sum'
				fi

				email_hash="$(echo -n "$email" | "$md5_command" | cut --delimiter ' ' --fields 1)"
				if _curl "https://gravatar.com/avatar/${email_hash}?s=1000" --output "$profile_picture_path"; then
					log 'done downloading profile picture.'
				else
					log 'failed to download profile picture'
				fi
			else
				warn 'Git email is not set, skipping profile picture download'
			fi
		fi
		break
	fi
done

if [ "$found_dir" = false ]; then
	warn "could not find any profile picture directories, skipping profile picture download"
fi

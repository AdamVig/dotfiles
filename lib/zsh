#!/usr/bin/env bash

_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# shellcheck source=./lib/helpers
source "$_dir"/helpers

log() {
	log_with_component zsh "$@"
}

log_start 'setting up Zsh'

# shellcheck disable=SC2119
request_sudo

if [[ $SHELL != *zsh ]]; then
	log_start 'changing default shell to Zsh'
	zsh_path="$(command -v zsh)"

	if is-macos; then
		request_sudo chsh -s "$zsh_path" "$USER"
	else
		if ! grep 'zsh' /etc/shells >/dev/null; then
			log_start 'adding Zsh to /etc/shells'
			echo "$zsh_path" | request_sudo tee -a /etc/shells
			log_end
		fi
		chsh --shell "$zsh_path"
	fi

	log_end
fi

log_start 'initializing Zsh configuration'
config_dir="$(xdg_config)"/zsh
if ! [ -d "$config_dir" ]; then
	mkdir -p "$config_dir"
fi
data_dir="$(xdg_data)"/zsh
if ! [ -d "$data_dir" ]; then
	mkdir -p "$data_dir"
fi

ln -sf "$_dir"/../.zshenv "$HOME"

# Include dotfiles in glob
shopt -s dotglob

ln -sf --target-directory="$config_dir" "$(realpath "$_dir"/../zsh)"/*

shopt -u dotglob
log_end

z_path="$(xdg_data)"/zsh-z
if ! [ -d "$z_path" ]; then
	log_start 'installing z'
	if ! git clone --depth 1 https://github.com/agkozak/zsh-z.git "$z_path" >/dev/null; then
		fatal 'failed to clone zsh-z'
	fi
	log_end
fi

fast_syntax_highlighting_path="$(xdg_data)"/zsh-fast-syntax-highlighting
if ! [ -d "$fast_syntax_highlighting_path" ]; then
	log_start 'installing Fast Syntax Highlighting'
	if ! git clone --depth 1 https://github.com/zdharma/fast-syntax-highlighting.git "$fast_syntax_highlighting_path" >/dev/null; then
		fatal 'failed to clone Fast Syntax Highlighting'
	fi
	log_end
fi

log_end

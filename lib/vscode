#!/usr/bin/env bash

_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# shellcheck source=./lib/helpers
source "$_dir"/helpers

log() {
	log_with_component vscode "$@"
}

log_start 'setting up Visual Studio Code'

log_start 'symlinking Visual Studio Code settings'

if is_macos; then
	vscode_settings_dir="$HOME"/Library/Application\ Support/Code/User
elif is_linux; then
	vscode_settings_dir="$HOME"/.config/Code/User
fi

mkdir -p "$vscode_settings_dir"
ln -sf "$_dir"/../.vscode/settings.json "$vscode_settings_dir"/settings.json
ln -sf "$_dir"/../.vscode/keybindings.json "$vscode_settings_dir"/keybindings.json

log_end

declare -a extensions=(
	bungcip.better-toml                   # TOML support
	dbaeumer.vscode-eslint                # JavaScript linter
	eamodio.gitlens                       # Advanced Git integration
	EditorConfig.editorconfig             # Editor text style configuration
	eg2.vscode-npm-script                 # package.json linting and npm script detection
	esbenp.prettier-vscode                # Code formatting with Prettier
	emroussel.atom-icons                  # Atom-inspired icons
	emroussel.atomize-atom-one-dark-theme # Atom-inspired theme
	GitHub.vscode-pull-request-github     # built-in GitHub pull request support
	jpoissonnier.vscode-styled-components # CSS IntelliSense for Emotion and Styled Components
	mrmlnc.vscode-scss                    # SCSS IntelliSense and autocomplete
	ms-vsliveshare.vsliveshare            # Live code sharing
	msjsdiag.debugger-for-chrome          # Chrome debugger integration
	ryanluker.vscode-coverage-gutters     # Code coverage visualizer
	QassimFarid.ejs-language-support      # EJS (Embedded JS) template language support
	rafamel.subtle-brackets               # Better bracket matching
	runem.lit-plugin                      # lit-html support
	stkb.rewrap                           # Reformats code comments and other text to a given line length
	streetsidesoftware.code-spell-checker # Spell checker
	timonwong.shellcheck                  # Shell script linting
)

log_start 'installing Visual Studio Code extensions'
for extension in "${extensions[@]}"; do
	set +e

	# Attempt to install extension; log message on success, log warning on failure
	if code --install-extension "$extension" >/dev/null; then
		log "installed \"$extension\""
	else
		warn "extension $extension failed to install; it may no longer be available"
	fi
	set -e
done
log_end

log_end

#!/usr/bin/env bash

_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# shellcheck source=./lib/helpers
source "$_dir"/helpers

log() {
	log_with_component emacs "$@"
}

log_start 'setting up Emacs'

if is_ubuntu; then
	user_emacs_unit_path="$(xdg_config)"/systemd/user/emacs-snapshot.service
	if ! [ -f "$user_emacs_unit_path" ]; then
		log_start 'linking Emacs snapshot service into place'
		if ! package_emacs_unit_path="$(find /usr/lib -name emacs-snapshot.service)"; then
			fatal 'failed to find path to Emacs Systemd unit'
		fi
		systemctl --user link "$package_emacs_unit_path"
		# Create an alias from "emacs-snapshot" to "emacs" for more convenient usage
		_ln "$user_emacs_unit_path" "$(xdg_config)"/systemd/user/emacs.service
		systemctl --user daemon-reload
		log_end 'done linking Emacs snapshot service into place.'
	fi

	if ! systemctl --user is-enabled --quiet emacs-snapshot.service; then
		log_start 'setting up Emacs daemon'
		systemctl --user enable --now emacs-snapshot.service
		log_end
	fi

	emacs_client_desktop_path="$HOME"/.local/share/applications/emacs-client.desktop
	if [ -f "$emacs_client_desktop_path" ]; then
		log_start 'removing no-longer-needed Emacs client desktop file'
		rm -f "$emacs_client_desktop_path"
		log_end
	fi
fi

log_start 'setting up Emacs configuration'
emacs_config_path="$(xdg_config)"/emacs/init.el
if ! [ -f "$emacs_config_path" ]; then
	log_start 'installing Emacs configuration'
	mkdir -p "$(dirname "$emacs_config_path")"
	_ln "$_dir"/../config/emacs.el "$emacs_config_path"
	log_end
fi

if is_macos; then
	log_start 'linking Emacs configuration to home directory for macOS Emacs'
	mkdir -p "$HOME"/.emacs.d/lisp
	_ln "$emacs_config_path" "$HOME"/.emacs.d
	if [ -f "$emacs_config_path"/lisp/init-local.el ]; then
		_ln "$emacs_config_path"/lisp/init-local.el "$HOME"/.emacs.d/lisp
	fi
	log_end
fi
log_end

log_end

#!/usr/bin/env bash

_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# shellcheck source=./lib/helpers
source "$_dir"/helpers

log() {
	log_with_component gh "$@"
}

log_start 'setting up GitHub CLI (gh)'

if ! command -v gh >/dev/null; then
	warn_and_bail 'could not find command "gh", skipping'
fi

log_start 'checking authentication'
if ! gh auth status &>/dev/null; then
	log_start 'authenticating'
	gh auth login --hostname=github.com --web --scopes=admin:public_key,codespace,user
	log_end
fi
log_end

log_start 'configuring gh as Git credential helper'
gh auth setup-git
log_end

log_start 'setting configuration'
gh config set git_protocol https
# Do not use the default pager, bat, because it adds unnecessary clutter
gh config set pager less
log_end

log_start 'setting aliases'
# Create a pull request
# $1: base branch
# $2: title
# shellcheck disable=SC2016
gh alias set prc --shell 'gh pull-request-body-commit-log "$1" | gh pr create --assignee=@me --base="$1" --body-file="-" --title="$2"'

# Create a draft pull request
# $1: base branch
# $2: title
# shellcheck disable=SC2016
gh alias set prcd --shell 'gh prc "$1" "$2" --draft'

# Get the base branch for the current branch's pull request
# shellcheck disable=SC2016
gh alias set prbase "pr view --json baseRefName --jq '.baseRefName'"

# Convenience shortcut for checking out a pull request
gh alias set co 'pr checkout'

log_end

log_start 'installing extensions'
declare -a gh_extensions=(
	AdamVig/gh-watch
	davidraviv/gh-clean-branches
)

for gh_extension in "${gh_extensions[@]}"; do
	log "$gh_extension"
	gh extension install "$gh_extension" &>/dev/null || true
done
log_end

log_end

#!/usr/bin/env bash

_dir="$(dirname "$(realpath "${BASH_SOURCE[0]}")")"

# shellcheck source=./lib/helpers
source "$_dir"/helpers

# shellcheck disable=SC2119
request-sudo

message "  %s" "setting up Linux..."

message "    %s" "installing essential tools..."
if command -v apt-get >/dev/null; then
	sudo apt-get update >/dev/null
	sudo apt-get install --yes build-essential curl file git jq >/dev/null
else
	error "could not find a supported package manager; skipping install"
fi
message "    %s" "done installing essential tools."

readonly fonts_dir="$(xdg_data)"/fonts
if ! [ -d "$fonts_dir"/source-code-pro ]; then
	mkdir -p "$fonts_dir"
	message '    %s' 'installing Source Code Pro...'
	if ! git clone --depth 1 --branch release https://github.com/adobe-fonts/source-code-pro.git "$fonts_dir"/source-code-pro; then
		fatal 'failed to clone Git repository'
	fi
	if ! fc-cache "$fonts_dir"/source-code-pro; then
		fatal 'failed to generate font caches'
	fi
	message '    %s' 'done installing Source Code Pro.'
fi

message "    %s" "installing shfmt..."
if ! shfmt_url="$(get_release_url 'mvdan/sh' 'linux_amd64')"; then
	fatal 'failed to get shfmt release URL'
fi

install_binary_from_url 'shfmt' "$shfmt_url"
message "    %s" "done installing shfmt."

message "    %s" "installing exa..."
if ! exa_url="$(get_release_url 'ogham/exa' 'linux-x86_64')"; then
	fatal 'failed to get exa release URL'
fi

exa_zip_tmp="$(mktemp)"
if ! _curl "$exa_url" --output "$exa_zip_tmp"; then
	fatal 'failed to download exa'
fi

exa_tmp="$(mktemp -d)"
if ! unzip "$exa_zip_tmp" 'exa-linux-x86_64' -d "$exa_tmp" >/dev/null; then
	fatal 'failed to unzip exa'
fi
rm -f "$exa_zip_tmp"

exa_path="$HOME"/.local/bin/exa
mv "$exa_tmp"/exa-linux-x86_64 "$exa_path"
rm -rf "$exa_tmp"

chmod +x "$exa_path"
message "    %s" "done installing exa."

message "    %s" "installing scc..."
if ! scc_url="$(get_release_url 'boyter/scc' 'x86_64-unknown-linux')"; then
	fatal 'failed to get scc release URL'
fi

scc_zip_tmp="$(mktemp)"
if ! _curl "$scc_url" --output "$scc_zip_tmp"; then
	fatal 'failed to download scc'
fi

scc_tmp="$(mktemp -d)"
if ! unzip "$scc_zip_tmp" 'scc' -d "$scc_tmp" >/dev/null; then
	fatal 'failed to unzip scc'
fi
rm -f "$scc_zip_tmp"

scc_path="$HOME"/.local/bin/scc
mv "$scc_tmp"/scc "$scc_path"
rm -rf "$scc_tmp"

chmod +x "$scc_path"
message "    %s" "done installing scc."

message "    %s" "installing Slack CLI..."
slack_cli_path="$HOME"/.local/bin/slack
if ! _curl https://raw.githubusercontent.com/rockymadden/slack-cli/master/src/slack --output "$slack_cli_path"; then
	fatal 'failed to download Slack CLI'
fi

chmod +x "$slack_cli_path"
message "    %s" "done installing Slack CLI."

message '  %s' 'installing Hub...'
if ! hub_url="$(get_release_url 'github/hub' 'linux-amd64')"; then
	fatal 'failed to get Hub release URL'
fi
hub_tmp="$(mktemp --suffix .tgz)"
if ! _curl "$hub_url" --output "$hub_tmp"; then
	fatal 'failed to download Hub'
fi
hub_extracted_tmp="$(mktemp -d)"
if ! tar zxvf "$hub_tmp" -C "$hub_extracted_tmp" --strip-components=1 >/dev/null; then
	fatal 'failed to extract Hub'
fi
rm -f "$hub_tmp"
hub_path="$HOME"/.local/bin/hub
install "$hub_extracted_tmp"/bin/hub "$hub_path"
install "$hub_extracted_tmp"/share/man/*/*.1 "$HOME"/.local/share/man/man1
hub_completion_dir="$HOME"/.local/share/hub
mkdir -p "$hub_completion_dir"
install "$hub_extracted_tmp"/etc/hub.zsh_completion "$hub_completion_dir"
rm -rf "$hub_extracted_tmp"
message '  %s' 'done installing Hub.'

message "    %s" "installing Bitwarden..."
bitwarden_path="$HOME"/.local/bin/Bitwarden.AppImage
if ! _curl 'https://vault.bitwarden.com/download/?app=desktop&platform=linux&variant=appimage' \
	--output "$bitwarden_path"; then
	fatal 'failed to download Bitwarden'
fi
chmod +x "$bitwarden_path"
message "    %s" "done installing Bitwarden."

message "  %s" "done setting up Linux."

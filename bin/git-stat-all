#!/usr/bin/env bash

set -euo pipefail

readonly usage="Usage: $(basename "$0") [-h|--help]
Check the Git status of all subdirectories of the current directory.

Flags:
    -h, --help  show this help text"

if [ "${1:-}" = "-h" ] || [ "${1:-}" = "--help" ]; then
  echo "$usage"
  exit 0
fi

# Print git status for directory if it has changes
# $1: directory
print-status-if-dirty() {
  local readonly bold="\\e[1m"
  local readonly reset="\\e[0m"

  local d
  d="${1:-}"

  if ! git -C "$d" diff-index --quiet --ignore-submodules=all HEAD --; then
    local status
    # Use `script` to capture colored output
    if status="$(script -q /dev/null git -C "$d" status --short)"; then
      # Print all at once to prevent interleaving when run in parallel
      echo -e "$bold$d$reset\\n$status"
    fi
  fi
}

main() {
  for d in */; do
    if ! [ -d "$d"/.git ]; then
      continue
    fi

    print-status-if-dirty "$d" &
  done
  wait
}
main "$@"

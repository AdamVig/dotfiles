#!/usr/bin/env bash

set -euo pipefail

DIR="$(dirname "$(realpath "$0")")"

readonly usage="Usage: $(basename "$0") [-h|--help]
Check the Git status of all subdirectories of the current directory.

Flags:
    -h, --help  show this help text"

if [ "${1:-}" = "-h" ] || [ "${1:-}" = "--help" ]; then
  echo "$usage"
  exit 0
fi

is-git-repository() {
  local dir
  dir="${1:-.}"
  [ -d "$dir"/.git ]
}

# Print git status for directory if it has changes
# $1: directory
print-status-if-dirty() {
  local d
  d="${1:-}"

  if ! git -C "$d" diff-index --quiet --ignore-submodules=all HEAD -- || \
     ! [ -z "$(git -C "$d" ls-files --exclude-standard --others)" ]; then
    # Redirect stderr so that nothing is printed if the command fails
    git -C "$d" -c color.ui=always status --short 2> /dev/null
  fi
}

# Show current state of a Git repository
# $1: directory
stat-repo() {
  local readonly bold="\\e[1m"
  local readonly reset="\\e[0m"

  local d
  d="${1:-}"

  if ! is-git-repository "$d"; then
    return 1
  fi

  local status
  status="$(print-status-if-dirty "$d")"

  if [ -n "$status" ]; then
    # Print all at once to prevent interleaving when run in parallel
    echo -e "$bold$d$reset\\n$status"
  fi
}

main() {
  for d in */; do
    stat-repo "$d" &
  done
  wait
}
main "$@"

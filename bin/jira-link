#!/usr/bin/env bash

set -euo pipefail

usage="Usage: $(basename "$0") [-h|--help] [--format=<format>] <Jira ticket URL>
Convert a Jira URL into a formatted link.

Flags:
	-f, --format	markup format to use, defaults to 'markdown'
	            	options are 'markdown' and 'org'
	-h, --help		show this help text"

set +e
getopt --test >/dev/null
if [ $? -ne 4 ]; then
	echo 'error: enhanced getopt is not installed' >&2
	exit 1
fi
set -e

opts=$(getopt -o 'h,f:' --long 'help,format:' --name "$(basename "$0")" -- "$@")
eval set -- "$opts"
unset opts

format='markdown'

while true; do
	case "$1" in
	'-h' | '--help')
		echo "$usage"
		exit
		;;
	'-f' | '--format')
		format="$2"
		shift 2
		continue
		;;
	'--')
		shift
		break
		;;
	*)
		echo 'error: failed to parse arguments' >&2
		exit 1
		;;
	esac
done

# Read from argument
url="${1-}"
# If argument is missing and stdin is not a terminal, read from stdin
if [ -z "$url" ] && ! [ -t 0 ]; then
	url="$(</dev/stdin)"
fi
# If argument and stdin are missing
if [ -z "$url" ]; then
	echo >&2 'must provide a URL'
	exit 1
fi

# First remove the atlOrigin query parameter along with the & after it, if there is one
# Then, if there is one, remove the trailing question mark
if ! url="$(echo "$url" | sed --regexp-extended --expression='s/atlOrigin=[a-zA-Z0-9]+&?//' --expression='s/\?$//')"; then
	echo >&2 "failed to strip atlOrigin query parameter from URL \"$url\""
	exit 1
fi

ticket_id_pattern=".*/browse/([A-Z]+-[0-9]+).*"
if ! [[ $url =~ $ticket_id_pattern ]]; then
	echo >&2 "failed to extract ticket ID from URL \"$url\""
	exit 1
fi

ticket_id="${BASH_REMATCH[1]}"

if [ "$format" = 'markdown' ]; then
	echo -n "[${ticket_id}](${url})"
elif [ "$format" = 'org' ]; then
	echo -n "[[${url}][${ticket_id}]]"
else
	echo >&2 "unsupported format \"$format\""
	exit 1
fi

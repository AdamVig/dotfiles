#!/usr/bin/env bash

set -euo pipefail

# Watch continuous integration for the current HEAD commit, printing out status as it changes
main() {
  if ! check-installed hub https://hub.github.com/; then
    return 1
  fi

  local head
  local ci_status
  local ci_status_all
  local ci_status_all_new
  local ci_status_exit_code

  # Cache head commit to avoid breaking when the user makes a new commit on the branch locally
  head="$(git rev-parse HEAD)"

  # hub ci-status exits non-zero when CI fails
  set +e
  ci_status="$(hub ci-status "$head")"
  ci_status_all="$(hub ci-status -v "$head")"
  set -e
  ci_status_exit_code=$?
  if [ $ci_status_exit_code = 3 ]; then
    echo "could not find CI status"
    return 1
  fi
  echo "$ci_status_all"

  # Check CI status every five seconds, terminate loop if it is no longer pending
  while [ "$ci_status" = "pending" ]; do
    sleep 5

    # Check if the status of individual checks has changed, only log them if it has
    set +e
    ci_status_all_new="$(hub ci-status -v "$head")"
    set -e
    if [ "$ci_status_all" != "$ci_status_all_new" ]; then
      ci_status_all="$ci_status_all_new"
      echo
      echo "Status updated:"
      echo "$ci_status_all"
    fi

    set +e
    ci_status="$(hub ci-status "$head")"
    set -e
    ci_status_exit_code=$?
  done
  
  local project
  project="$(basename "$(pwd)")"

  local message
  if [ $ci_status_exit_code = 0 ]; then
    message="CI for $project succeeded."
  elif [ $ci_status_exit_code = 1 ]; then
    message="CI for $project failed."
  else
    message="Something unexpected happened in CI for $project."
  fi

  if is-macos; then
    osascript -e "display notification \"$message\" with title \"watch-ci\""
  fi
}
main "$@"
